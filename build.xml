<?xml version="1.0" encoding="UTF-8"?>

<project name="pruebas" default="default" basedir=".">
    <description>Builds, tests, and runs the project pruebas.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <target name="desplegarProduccion" depends="-enable-produccion, dist" > 
        <echo> Desplegando... </echo>
        <deploy url="http://172.16.205.109/manager/text" username="admin" password="admin" path="/pruebas" war="./dist/pruebas.war"/>   
    </target>
    
    <property name="libs.CopyLibs.classpath" value="ant/lib/org-netbeans-modules-java-j2seproject-copylibstask.jar" />
    <property name="j2ee.server.home" value="ant" />
    
    <path id="tomcat.classpath"> 
        <fileset dir="./ant/lib" includes="*.jar" />
    </path>
    <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" classpathref="tomcat.classpath" />

    
    <!-- ANT CAMBIAR CONTEXT.XML para PRODUCCION -->
    <!-- Si activamos la variable enableProduccion cambiaremos el context para produccion -->
    
    <target name="-enable-produccion" >
        <property name="enableProduccion" value="patata" />
    </target>
    
    <target name="-base-datos-produccion" if="enableProduccion"> 
        <echo> Borrando y Renombrando... </echo>
        <delete dir="build/web/META-INF/context.xml"/>
        <move file="build/web/META-INF/context-produccion.xml" tofile="build/web/META-INF/context.xml"/>
    </target>
    
    <!-- Para que se ejecute el target de renombrar y borrar-->
    <target name="-pre-dist" depends="-base-datos-produccion"> 
        
    </target>    
    
    
    <!--There exist several targets which are by default empty and which can be 
    used for execution of your tasks. These targets are usually executed 
    before and after some main targets. They are: 

    -pre-init:                 called before initialization of project properties 
    -post-init:                called after initialization of project properties 
    -pre-compile:              called before javac compilation 
    -post-compile:             called after javac compilation 
    -pre-compile-single:       called before javac compilation of single file
    -post-compile-single:      called after javac compilation of single file
    -pre-compile-test:         called before javac compilation of JUnit tests
    -post-compile-test:        called after javac compilation of JUnit tests
    -pre-compile-test-single:  called before javac compilation of single JUnit test
    -post-compile-test-single: called after javac compilation of single JUunit test
    -pre-dist:                 called before archive building 
    -post-dist:                called after archive building 
    -post-clean:               called after cleaning build products 
    -pre-run-deploy:           called before deploying
    -post-run-deploy:          called after deploying

    Example of pluging an obfuscator after the compilation could look like 

    <target name="-post-compile">
        <obfuscate>
            <fileset dir="${build.classes.dir}"/>
        </obfuscate>
    </target>

    For list of available properties check the imported 
    nbproject/build-impl.xml file. 


    Other way how to customize the build is by overriding existing main targets.
    The target of interest are: 

    init-macrodef-javac:    defines macro for javac compilation
    init-macrodef-junit:   defines macro for junit execution
    init-macrodef-debug:    defines macro for class debugging
    do-dist:                archive building
    run:                    execution of project 
    javadoc-build:          javadoc generation 

    Example of overriding the target for project execution could look like 

    <target name="run" depends="
        <PROJNAME>-impl.jar"
            <exec dir="bin" executable="launcher.exe">
                <arg file="${dist.jar}"/>
            </exec>
    </target>

  Notice that overridden target depends on jar target and not only on 
    compile target as regular run target does. Again, for list of available 
    properties which you can use check the target you are overriding in 
    nbproject/build-impl.xml file. 

    -->
</project>
